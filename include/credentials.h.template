#ifndef CREDENTIALS_H
#define CREDENTIALS_H

#include "struct.h"

/**
 * Fallback TB device token. Used when not set in DeviceConfig
 */
const char FALLBACK_TB_DEVICE_TOKEN[] = "";

/**
 * Fallback cellular provider APN. Used when not set in DeviceConfig
 */
const char FALLBACK_CELL_APN[] = "";

/**
 * DEBUG build credentials
 */
#ifdef DEBUG

//
// Thingsboard
//
/** Thingsboard server URL */
const char TB_SERVER[] = "";
/** Thingsboard server port */
const int TB_PORT = 80;

//
// Device geoash
// 
const char DEVICE_GEOHASH[] = "";

//
// IPFS
//
/** Node address */
const char IPFS_NODE_ADDR[] = "";
/** Node port */
const int IPFS_NODE_PORT = 5001;

/** IPFS middleware where IPFS file CIDs will be submitted to after creation*/
const char IPFS_MIDDLEWARE_URL[] = "";
const int IPFS_MIDDLEWARE_PORT = 3001;

//
// Other
//
/** URL for plain HTTP rtc time sync 
 * GET requests to this URL must return just a timestamp and nothing else in its response body.
 * Used as fallback when other sync methods fail (eg. NTP) */
const char HTTP_TIME_SYNC_URL[] = "";

//
// WiFi debug console
//
const char WIFI_ROOT_CA_CERTIFICATE[] = \
"-----BEGIN CERTIFICATE-----\n" \
"-----END CERTIFICATE-----\n";

/** Wifi SSID */
const char WIFI_SSID[] = "";
/** Wifi password */
const char WIFI_PASSWORD[] = "";
/** Timber.io log source id */
#define TIMBER_SOURCE_ID ""
#define TIMBER_API_KEY ""

/**
 * RELEASE build credentials
 */
#elif RELEASE
//
// Thingsboard
//
/** Thingsboard server URL */
const char TB_SERVER[] = "";
/** Thingsboard server port */
const int TB_PORT = 80;

//
// Device geoash
// 
const char DEVICE_GEOHASH[] = "";

//
// IPFS
//
/** Node address */
const char IPFS_NODE_ADDR[] = "";
/** Node port */
const int IPFS_NODE_PORT = 80;

/** IPFS middleware where IPFS file CIDs will be submitted to after creation*/
const char IPFS_MIDDLEWARE_URL[] = "";
const int IPFS_MIDDLEWARE_PORT = 3001;

//
// Other
//
/** URL for plain HTTP rtc time sync 
 * GET requests to this URL must return just a timestamp and nothing else in its response body.
 * Used as fallback when other sync methods fail (eg. NTP) */
const char HTTP_TIME_SYNC_URL[] = "";

//
// WiFi debug console
//
const char WIFI_ROOT_CA_CERTIFICATE[] = \
"-----BEGIN CERTIFICATE-----\n" \
"-----END CERTIFICATE-----\n";

/** Wifi SSID */
const char WIFI_SSID[] = "";
/** Wifi password */
const char WIFI_PASSWORD[] = "";
/** Timber.io log source id */
#define TIMBER_SOURCE_ID ""
#define TIMBER_API_KEY ""

#else
#error "No build type specified."
#endif

#endif // CREDENTIALS_H`